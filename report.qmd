---
title: "EV Power - Lab 4 Project Report"
format: typst
author: Lucas Zhou
execute: 
  echo: false
  warning: false
  message: false
---

# Example Solution 1

## Introduction

The importance of protecting the environment never fails to becoming the focus of human beings living in modern age. The mission of seeking ways to improve the environmental condition is a crucial role for researchers in whatever area of study. For us Statistician (or at least Statistic Student), what we can contribute is using our professional knowledge of data manipulation and proposing insightful conclusions based on data.

In particular, this project asks us to look into the energy data of every states in the US from 2021 to 2023. From EDA, we are able to demystify some common misconception and ferret out overlooked features. In this report, after cleaning the dirty and chaotic data sets and joining them together, I will answer mainly three research questions:

1.  How has the share of renewable energy changed from 2021–2023 across states?
2.  What is the share of electricity that comes from clean sources by state?
3.  Are EV registrations concentrated in states with cleaner energy mixes?

Starting this project late until the last day, I spent the whole afternoon finishing the data cleaning, and the whole evening drawing out figures and formulating the report. Clearly, the heavy workload of the projects and problem sheets far exceed my expectations of a 3 unit course, on par with the workload of notoriously 4 unit CS61B, or cosplaying the formidable Stat215a. Even so, it was a great pleasure of doing this project, where I takes a lot. With the assisstance of Gemini AI, I was amazed by the power of R language in drawing out such an incredible map filled with my data. Thanks for Professor Andrew Bray and all the GSIs that gave us this valuable practice opportunity.

## **Part 0: libraries**

```{r}
library(tidyverse)
library(sf)
library(sf)
library(leaflet)
library(tigris)
library(scales)
library(plotly)
```

## **Part 1:** **Defining Research Question**

See Introduction.

## **Part 2: Data Preparation and Cleaning**

Before cleaning, we have the raw data as below.

```{r}

# Read the renewable energy files
renew_2021 <- read.csv("data/renew-use-2021.csv")
renew_2022 <- read.csv("data/renew-use-2022.csv")
renew_2023 <- read.csv("data/renew-use-2023.csv")

# Read the average energy price file
avg_price <- read.csv("data/av-energy-price-2021-2023.csv")

# Read the total energy use files
total_use_2021 <- read.csv("data/total-use-2021.csv")
total_use_2022 <- read.csv("data/total-use-2022.csv")
total_use_2023 <- read.csv("data/total-use-2023.csv")

# Read the EV registrations file
ev_registrations <- read.csv("data/ev-registrations-by-state-2023.csv")

# View all the headings of those dfs:
head(renew_2021)
head(renew_2022)
head(renew_2023)
head(avg_price)
head(total_use_2021)
head(total_use_2022)
head(total_use_2023)
head(ev_registrations)
```

After performing the monumental efforts on data cleaning, I am able to get the frames as below.

```{r}
## clean av-energy-price

cleaned_avg_price <- avg_price |>
  # Step 1: Remove the top two junk rows
  slice(-c(1, 2)) |>
  # Step 2: Separate the single column into four new columns at each comma
  separate(
    col = Total.energy.average.price..dollars.per.million.Btu...,
    into = c("State", "Price_2021", "Price_2022", "Price_2023"),
    sep = ","
  )
# Step 3: Use stringr to make it better
cleaned_avg_price <- cleaned_avg_price |>
  mutate(
    `2021` = str_extract(Price_2021, "\\d+\\.\\d+"),
    `2022` = str_extract(Price_2021, "\\d+\\.\\d+"),
    `2023` = str_extract(Price_2021, "\\d+\\.\\d+"),
    State_abb = State
  ) |>
  select(State_abb, `2021`, `2022`, `2023`) |>
  mutate(
    State = state.name[match(State_abb, state.abb)],
    State = if_else(State_abb == "DC", "District of Columbia", State)
  )


head(cleaned_avg_price)


## clean data in ev_registration
cleaned_ev_registrations <- ev_registrations |>
  slice(-c(1, 2)) |>
  mutate(
    count = str_extract(X, "\\d+"),
    State = electric.vehicle.registrations_by_state..2023.,
    State_abb = state.abb[match(State, state.name)],
    State_abb = if_else(State == "District of Columbia", "DC" , State_abb)
  ) |>
  select(State, State_abb, count)
head(cleaned_ev_registrations)


## clean data in renew
cleaned_renew_2021 <- renew_2021 |>
  mutate(
    Price_2021 = str_extract(Renewable_Use_2021, "\\d+"),
    Source = as.factor(Energy_Source),
     State_abb = toupper(State)
    
  ) |>
  select(State_abb, Source, Price_2021)
head(cleaned_renew_2021)

cleaned_renew_2022 <- renew_2022 |>
  mutate(
    Price_2022 = str_extract(Renewable_Use_2022, "\\d+"),
    Source = as.factor(Energy_Source),
    State_abb =toupper(State)
  ) |>
  select(State_abb, Source, Price_2022)
head(cleaned_renew_2022)

cleaned_renew_2023 <- renew_2023 |>
  mutate(
    Price_2023 = str_extract(Renewable_Use_2023, "\\d+"),
    Source = as.factor(Energy_Source),
    State_abb = toupper(State)
  ) |>
  select(State_abb, Source, Price_2023)
head(cleaned_renew_2023)


## clean data in total_use
cleaned_total_use_2021 <- total_use_2021 |>
  mutate(
    Energy_Source = recode(Energy_Source,
      "Coal"                     = "Coal",
      "Natural Gas†"             = "Natural_Gas",
      "Petroleum (BTU)"          = "Petroleum",
      "nuclear"                  = "Nuclear",
      "total_renewable_energy"   = "Total_Renewables"
    ),
    Energy_Source = factor(Energy_Source, 
      levels = c("Coal", "Natural_Gas", "Petroleum", "Nuclear", "Total_Renewables")
    )
  ) |>
  pivot_longer(
    cols = AK:US,
    names_to = "State_abb",
    values_to = "Price_2021"
      )
head(cleaned_total_use_2021)

cleaned_total_use_2022 <- total_use_2022 |>
  mutate(
    # Step 1: Recode the messy values to clean, consistent names
    Energy_Source = recode(Energy_Source,
      "coal Consumption"   = "Coal",
      "Natural-Gas"        = "Natural_Gas",
      "petroleum (btu)"    = "Petroleum",
      "Nuclear Energy†"    = "Nuclear",
      "total_renewables"   = "Total_Renewables"
    ),
    # Step 2: Convert the column to a factor with a specific order
    Energy_Source = factor(Energy_Source, 
      levels = c("Coal", "Natural_Gas", "Petroleum", "Nuclear", "Total_Renewables")
    )
  ) |>
  pivot_longer(
    cols = AK:US,
    names_to = "State_abb",
    values_to = "Price_2022"
      )
head(cleaned_total_use_2022)

cleaned_total_use_2023 <- total_use_2023 |>
  mutate(
    # Step 1: Recode the messy values to clean, consistent names
    Energy_Source = recode(Energy_Source,
      "coal_usage"              = "Coal",
      "NaturalGas"              = "Natural_Gas",
      "petroleum (BTU)"         = "Petroleum",
      "nuclear-energy †"        = "Nuclear",
      "total renewable-energy"  = "Total_Renewables"
    ),
    # Step 2: Convert the column to a factor with a specific order
    Energy_Source = factor(Energy_Source, 
      levels = c("Coal", "Natural_Gas", "Petroleum", "Nuclear", "Total_Renewables")
    )
  )|>
  
  pivot_longer(
    cols = AK:US,
    names_to = "State_abb",
    values_to = "Price_2023"
      )
head(cleaned_total_use_2023)
```

## **Part 3: Joining / Pivoting Datasets for Analysis**

This part will be done along with the next part on EDA.

## **Part 4: Mapping Visualization**

### Question 1: How has the share of renewable energy changed from 2021–2023 across states?

To answer this question, I firstly join the three *cleaned_renew* data frames, named and shown as q1. I then adjust this joint data frame into a format better for future plotting, named and shown as analysis_q1.

```{r}
q1 <- full_join(cleaned_renew_2021, cleaned_renew_2022,by = c("State_abb", "Source"))
q1 <- full_join(cleaned_renew_2023, q1 ,by = c("State_abb", "Source"))
head(q1)

analysis_q1 <- q1 |>
  pivot_longer(
    cols = starts_with("Price_"),  
    names_to = "Year",             
    values_to = "Energy_Amount"    
  ) |>
  mutate(
    Year = as.numeric(str_remove(Year, "Price_")), 
    Energy_Amount = as.numeric(Energy_Amount) 
  ) |>
  group_by(State_abb, Year) %>% 
  mutate(
    Total_Energy_Per_Year = sum(Energy_Amount, na.rm = TRUE),
    Share = Energy_Amount / Total_Energy_Per_Year
  ) |>
  ungroup() 

head(analysis_q1)
```

I then use the ggplot to generate a multi-facets bar plot, where each facet represents a state, in which shows the change in proportion of renewable energy across the three years.

```{r}
#| label: fig-renewable-share
#| fig-width: 12
#| fig-height: 8
#| fig-cap: "Change in Renewable Energy Share Across States (2021-2023)"

analysis_q1 |>
  ggplot(aes(x = Year, y = Share, fill = Source)) +
  geom_col() +
  labs(
    title = "Change in Renewable Energy Share Across States (2021-2023)",
    subtitle = "Each panel represents a different state",
    x = "Year",
    y = "Share of Total Renewable Energy",
    fill = "Energy Source"
  ) +
  theme_minimal() +
  facet_wrap(~ State_abb)
```

However, since there are quite a lot of states and the change in proportion across years is small, it is quite hard to extract any understandable information from the figure. In this case, a better figure could be drawn by putting those data into the US map. With the help of Gemini, I finally able to create an interactive map which contains all the data in the previous multi-facets bar chart, which is so amazing.

```{r}
#| results: 'hide'

# 1. GET MAP DATA
# Download the shapes of the US states for plotting
states_sf <- suppressMessages(states(cb = TRUE)) %>% 
  st_transform(4326) 

# 2. PREPARE POP-UP DATA
# This part takes your 'analysis_q1' frame and creates the HTML text for the pop-ups
popup_data <- analysis_q1 %>%
  # Format the 'Share' column into a clean percentage label
  mutate(Share_Label = paste0(Source, ": ", percent(Share, accuracy = 0.1))) %>%
  # Group by state and year to combine all sources into one summary string
  group_by(State_abb, Year) %>%
  summarise(Yearly_Summary = paste(Share_Label, collapse = "<br>"), .groups = 'drop') %>%
  # Pivot the data so we can easily access each year's summary
  pivot_wider(names_from = Year, values_from = Yearly_Summary, names_prefix = "Year_") %>%
  # Create the final, clean HTML content for the pop-up window
  mutate(
    Popup_Content = paste(
      "<strong>State: ", State_abb, "</strong><br><hr>",
      "<strong>2023 Shares:</strong><br>", Year_2023, "<br><br>",
      "<strong>2022 Shares:</strong><br>", Year_2022, "<br><br>",
      "<strong>2021 Shares:</strong><br>", Year_2021
    )
  )

# 3. JOIN DATA AND CREATE MAP
# Join your energy data to the map shapes
map_data <- states_sf %>%
  left_join(popup_data, by = c("STUSPS" = "State_abb"))

# Build and display the interactive leaflet map!
leaflet(map_data) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  setView(lng = -98.5, lat = 39.8, zoom = 4) %>%
  addPolygons(
    fillColor = "#0072B2", # A nice blue color
    weight = 1,
    color = "white",
    fillOpacity = 0.7,
    # Add a highlight effect when you hover over a state
    highlightOptions = highlightOptions(
      weight = 3,
      color = "black",
      bringToFront = TRUE
    ),
    # Use the 'Popup_Content' column we created for the pop-up text
    popup = ~Popup_Content
  )
```

### Question 2: What is the share of electricity that comes from clean sources by state?

To answer this question, I join the three *cleaned_total_use* data frames named q2. Likewise, I reformat this new data frame, and calculate Share of the clean energy.

```{r}
q2 <- full_join(cleaned_total_use_2021, cleaned_total_use_2022, by=c("State_abb", "Energy_Source"))
q2 <- full_join(q2, cleaned_total_use_2023, by=c("State_abb", "Energy_Source"))


analysis_q2 <- q2 |>
  pivot_longer(
    cols = starts_with("Price_"),  
    names_to = "Year",             
    values_to = "Energy_Amount"    
  ) |>
  mutate(
    Year = as.numeric(str_remove(Year, "Price_")), 
    Energy_Amount = as.numeric(Energy_Amount) 
  ) |>
  group_by(State_abb, Year) |>
  mutate(
    Total_Energy_Per_Year = sum(Energy_Amount, na.rm = TRUE),
    Share = Energy_Amount / Total_Energy_Per_Year
  ) |>
  ungroup() |>
  filter(Energy_Source == "Total_Renewables")

head(analysis_q2)
```

This time, we create another bar chart, which shows the proportion of electricity that comes from each state.

```{r}
#| label: fig-clean-share
#| fig-width: 12
#| fig-height: 8
#| fig-cap: "Share of Electricity From Clean Sources by State"

analysis_q2 |>
  mutate(State_abb = fct_reorder(State_abb, ifelse(Year == 2023, Share, 0), .desc = TRUE)) |>
  ggplot(aes(x = State_abb, y = Share, fill = factor(Year))) +
  geom_col(position = "dodge") +
  labs(
    title = "Share of Electricity From Clean Sources by State",
    subtitle = "States are ordered by their 2023 share (descending)",
    x = "State",
    y = "Share of Total Electricity",
    fill = "Year"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

Likewise, feed these data into the combination with the US map with the help of Gemini.

```{r}
popup_data <- analysis_q2 %>%
  # Select only the columns we need
  select(State_abb, Year, Share) %>%
  # Pivot to a "wide" format
  pivot_wider(
    names_from = Year,
    values_from = Share,
    names_prefix = "Share_"
  ) %>%
  # Create the pop-up content using HTML tags
  mutate(
    Popup_Content = paste0(
      "<strong>State: </strong>", State_abb, "<br><hr>",
      "<strong>Clean Energy Share:</strong><br>",
      "2023: ", percent(Share_2023, accuracy = 0.1), "<br>",
      "2022: ", percent(Share_2022, accuracy = 0.1), "<br>",
      "2021: ", percent(Share_2021, accuracy = 0.1)
    )
  )

# Get the US states map data
states_sf <- states(cb = TRUE) %>% 
  st_transform(4326) # Use a standard projection for web maps

# Join your energy data to the map shapes
map_data <- states_sf %>%
  left_join(popup_data, by = c("STUSPS" = "State_abb"))

# Create the final interactive map!
leaflet(map_data) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  setView(lng = -98.5, lat = 39.8, zoom = 4) %>%
  addPolygons(
    fillColor = "seagreen", # A nice green color for clean energy
    weight = 1,
    color = "white",
    fillOpacity = 0.7,
    
    # Add a highlight effect when you hover over a state
    highlightOptions = highlightOptions(
      weight = 3,
      color = "black",
      bringToFront = TRUE
    ),
    
    # Use the 'Popup_Content' column we created for the pop-up text
    popup = ~Popup_Content
  )

```

### Question 3: Are EV registrations concentrated in states with cleaner energy mixes?

After getting some general senses of our data and the energy situations for every state, it would be helpful to get into some specific interrogations. Using our data from previous part, I join the data frame *q2* and *cleaned_ev_registrations.* Removing redundant columns, I get the following result.

```{r}
q3 <- full_join(cleaned_ev_registrations, analysis_q2, by="State_abb" ) |>
  select(State_abb, EV_count = count, Year, Share) |>
  group_by(State_abb) |>
  mutate(avg_share = sum(Share)/n()) |>
  ungroup() |>
  filter(Year == 2021) |>
  select(c(-3, -4)) |>
  mutate(EV_count = as.numeric(EV_count))

head(q3)
```

To visualize whether there is a relationship between clean energy proportion and EV registrations, I made a scatter plot withnumbers of EVs against the average clean energy shares among 2021, 2022, 2023. To make it better for visualization, I make it interactively to show the name of the state for each point, with the help of Gemini.

```{r}
p <- ggplot(q3, aes(x = EV_count, y = avg_share, text = State_abb)) +
  geom_point(alpha = 0.7, color = "dodgerblue") +
  labs(
    title = "EV Count vs. Clean Energy Share by State",
    x = "Number of Electric Vehicles Registered",
    y = "Average Share of Clean Energy"
  ) +
  theme_minimal()

# 2. Convert the ggplot object into an interactive plot
# The 'tooltip' argument tells plotly which aesthetic to display on hover
ggplotly(p, tooltip = "text")
```

Nevertheless, I'm facing the issue that the *EV_count* for California are far more than other states, which distorts the figure. Therefore, treating it as an outlier by removing it, I can replot the figures as above.

```{r}
q3_noCA <- q3 |>
  filter(State_abb != "CA")
head(q3_noCA)

p_noCA <- ggplot(q3_noCA, aes(x = EV_count, y = avg_share, text = State_abb)) +
  geom_point(alpha = 0.7, color = "dodgerblue") +
  labs(
    title = "EV Count vs. Clean Energy Share by State",
    x = "Number of Electric Vehicles Registered",
    y = "Average Share of Clean Energy"
  ) +
  theme_minimal()

# 2. Convert the ggplot object into an interactive plot
# The 'tooltip' argument tells plotly which aesthetic to display on hover
ggplotly(p_noCA, tooltip = "text")
```

The figures give us a general sense on the relationship between these two variables, but to make more justifiable claim, we need the help of testing statistics. Below, I use a linear model to fit the two variables, and calculating some characteristic values as shown.

```{r}
model <- lm(avg_share ~ EV_count, data = q3)

summary(model)

cor.test(q3$avg_share, q3$EV_count)
```

From the summary, we get a p-value larger than 0.05. Also, the correlation coefficient is very insignificant. Therefore, we cannot reject our null hypothesis, that there is no clear linear relationship between clean energy shares and number of EVs registered.
